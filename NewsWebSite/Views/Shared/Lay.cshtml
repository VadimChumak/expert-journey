@using NewsWebSite.Models.Services
@using Microsoft.AspNet.Identity
@{
    var NotifiCnt = NotificationsService.Instance.GetValue(User.Identity.GetUserId<int>());
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    @*@Styles.Render("~/Content/Style.css")
    @Styles.Render("~/Content/select2.min.css")
    @Styles.Render("~/Content/icon.css")
    @Styles.Render("~/Content/materialize.min.css")
    @Styles.Render("~/Content/selectStyles.css")*@
    @Styles.Render("~/bundles/defaultStyles")
   
    <title> News Portal</title>
   
    <style>
        body {
            background-color: #cfd8dc;
        }

        .grid-item {
            float: left;
            width: 450px;
        }

        strong {
            font-weight: bold;
        }
    </style>
</head>
<body>
    <ul id="dropdown1" class="dropdown-content">
        <li><a href="@Url.Action("Index", "Account")">Профиль</a></li>
        <li><a href="@Url.Action("CreateArticle", "News")">Создать новость</a></li>
        <li><a href="@Url.Action("Index", "News", new { isInterestingNews = true })">Интерестные новости</a></li>
        <li><a href="@Url.Action("Index", "News", new { isUserNews = true })">Мои новости</a></li>
        <li class="divider"></li>
        <li><a href="@Url.Action("LogOff", "Account")">Выйти</a></li>
    </ul>
    <ul id="dropdown2" class="dropdown-content">
        <li><a href="@Url.Action("Index", "Account")">Профиль</a></li>
        <li><a href="@Url.Action("CreateArticle", "News")">Создать новость</a></li>
        <li><a href="@Url.Action("Index", "News", new { isInterestingNews = true })">Интерестные новости</a></li>
        <li><a href="@Url.Action("Index", "News", new { isUserNews = true })">Мои новости</a></li>
        <li class="divider"></li>
        <li><a href="@Url.Action("LogOff", "Account")">Выйти</a></li>
    </ul>
    <nav class="blue-grey darken-3">
        <div class="nav-wrapper">
            <a href="@Url.Action("Index", "News")" class="brand-logo">NewsPortal</a>
            <a href="#" data-activates="mobile-demo" class="button-collapse"><i class="material-icons">menu</i></a>
            <ul class="right hide-on-med-and-down">
                <li><a href="@Url.Action("Index", "News")">Главная</a></li>
                @if (User.Identity.IsAuthenticated)
                {
                    <li><a href="@Url.Action("Notifications", "Account")">Мои Ответы(<span class="nCnt">@NotifiCnt</span>)</a></li>
                    <li><a class="dropdown-button" href="#!" data-activates="dropdown1">@User.Identity.Name.Split('@')[0]<i class="material-icons right">arrow_drop_down</i></a></li>
                }
                else
                {
                    <li><a id="loged-button" href="@Url.Action("LogIn", "Account", new { returnUrl = Request.RawUrl })">Войти</a></li>
                }
            </ul>
            <ul class="side-nav" id="mobile-demo">
                <li><a href="@Url.Action("Index", "News")">Главная</a></li>

                @if (User.Identity.IsAuthenticated)
                {
                    <li><a href="@Url.Action("Notifications", "Account")">Мои Ответы(<span class="nCnt">@NotifiCnt</span>)</a></li>
                    <li><a class="dropdown-button" href="#!" data-activates="dropdown2">@User.Identity.Name.Split('@')[0]<i class="material-icons right">arrow_drop_down</i></a></li>
                }
                else
                {
                    <li><a id="loged-button" href="@Url.Action("LogIn", "Account", new { returnUrl = Request.RawUrl })">Войти</a></li>
                }
            </ul>
        </div>
    </nav>
    <div class="container col s12 ">
        @RenderBody()
    </div>
    @Scripts.Render("~/bundles/default")
    @Scripts.Render("~/signalr/hubs")
    <script>var connectionStrted = false;</script>
    @RenderSection("scripts", required: false)
    @Scripts.Render("~/Scripts/HubConnect.js")
    @Scripts.Render("~/bundles/formPost")
</body>
</html>